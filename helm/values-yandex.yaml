replicaCount: 1

image:
  repository: cr.yandex/crp11o4i1hlgiik650c5/api
  pullPolicy: IfNotPresent
  tag: "0.1.1"

#imagePullSecrets:
#- name: gcr-json-key
nameOverride: ""
fullnameOverride: ""

podAnnotations:
  prometheus.io/path: /metrics
  prometheus.io/port: "8000"
  prometheus.io/scrape: "true"

service:
  type: ClusterIP
  port: 8000
ingress:
  enabled: true
  className: ""
  annotations: 
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Access-Control-Allow-Origin: $http_origin";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  hosts:
    - host: dev.tradebot.shop
      paths:
        - path: /api
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - dev.tradebot.shop
      secretName: "letsencrypt-api"

resources: 
  limits:
    cpu: 1000m
    memory: 1000Mi
  requests:
    cpu: 500m
    memory: 500Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

env:
  secret:
    CELERY_BROKER_URL: "redis://:sfedH984326FFfd5@redis-master.app-dev.svc.cluster.local:6379"
    CELERY_RESULT_BACKEND: "redis://:sfedH984326FFfd5@redis-master.app-dev.svc.cluster.local:6379"
    DATABASE_URL: "postgresql://postgres:sdf9H9845fvsn&6fs9^&@postgresql.app-dev.svc.cluster.local:5432/postgres"
    KEYCLOAK_URL: "https://keycloak.tradebot.shop/auth/realms/trade-bot/protocol/openid-connect/token"
    image: "cr.yandex/crp11o4i1hlgiik650c5/mt5-vnc-server-profile:0.3.29"
    expert_name: "strat_with_server"
