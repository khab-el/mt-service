apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}-api
  labels:
    app: api
    app.kubernetes.io/name: {{ include "api.name" . }}
    helm.sh/chart: {{ include "api.chart" . }}
    {{- include "api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "api.name" . }}-api
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: api
        {{- include "api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - -c
            - |
              until poetry run migrate && echo migrations apply; do sleep 2; done;
          env:
            {{- range $key, $val := .Values.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: secret-cred
                  key: {{ $key }}
            {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      containers:
        - name: {{ .Chart.Name }}-api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["poetry"]
          args: ["run", "start", "api"]
          env:
            {{- range $key, $val := .Values.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: secret-cred
                  key: {{ $key }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /app/src/config_dec.yml
            name: k8s-config
            subPath: config_dec.yml
      volumes:
      - name: k8s-config
        secret:
          defaultMode: 420
          secretName: {{ include "api.fullname" . }}-k8s-config
      - name: secret-cred
        secret: 
          secretName: secret-cred
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}